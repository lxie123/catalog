tags: []
title: "Google Compute Engine"
summary: "Deploy kubernetes clusters with k0rdent on GCP infrastructure."
logo: ./assets/gce_logo.svg # https://www.svgrepo.com/svg/375397/compute-engine
type: infra
description: |
  K0rdent supports deploying and managing Kubernetes clusters directly on Google Compute Engine (GCE) virtual machines, offering full lifecycle control without relying on GKE. Here’s how k0rdent integrates with Google Cloud’s compute infrastructure:
  
  - Cluster Deployment on GCE: Provision Kubernetes clusters on Google Compute Engine VMs using Cluster API (CAPI) with the Google Cloud infrastructure provider.
  - Custom Infrastructure Management: Define and manage your own networking, firewall rules, disks, and VM configurations to tailor clusters to your specific needs—beyond the limitations of GKE.
  - Centralized Multi-Cloud Management: Operate your Google Compute-based clusters from the k0rdent control plane alongside other cloud or on-prem clusters.
  - Flexible Resource Allocation: Optimize node sizing, regional placement, and scaling strategies with full control over VM-based infrastructure.
  - Security and IAM Integration: K0rdent integrates with Google Cloud IAM and supports configuring secure access, firewall rules, and identity-aware access policies for your Kubernetes workloads.
support_link: https://cloud.google.com/support
install_code: |
  ~~~yaml
  # k0rdent {{ version }} includes the template for Google Computer Engine out of the box
  ~~~
verify_code: |
  ~~~bash
  kubectl get clustertemplate -n kcm-system
  # NAME                            VALID
  # gcp-standalone-cp-{{ dash_version }}         true
  ~~~
deploy_code: |
  ~~~yaml
  apiVersion: k0rdent.mirantis.com/v1alpha1
  kind: ClusterDeployment
  metadata:
    name: my-gcp-clusterdeployment1
    namespace: kcm-system
  spec:
    template: gcp-standalone-cp-{{ dash_version }}
    credential: gcp-credential
    config:
      project: PROJECT_NAME # Your project name
      region: us-east4 # Select your desired GCP region (find it via `gcloud compute regions list`)
      network:
        name: default # Select your desired network name (select new network name to create or find it via `gcloud compute networks list --format="value(name)"`)
      controlPlane:
        instanceType: n1-standard-2 # Select your desired instance type (find it via `gcloud compute machine-types list | grep REGION`)
        image: projects/ubuntu-os-cloud/global/images/ubuntu-2004-focal-v20250213 # Select image (find it via `gcloud compute images list --uri`)
        publicIP: true
      worker:
        instanceType: n1-standard-2 
        image: projects/ubuntu-os-cloud/global/images/ubuntu-2004-focal-v20250213
        publicIP: true
  ~~~
doc_link: https://cloud.google.com/compute/docs
versions: [v0.2.0, v0.3.0]
